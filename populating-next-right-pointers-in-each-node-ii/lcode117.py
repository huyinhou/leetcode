import unittest

class TreeLinkNode:
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None
        self.next = None

class Solution:
    # @param root, a tree link node
    # @return nothing
    def connect(self, root):
        if root is None:
            return
        level = root
        while level is not None:
            lmost = None
            curr = None
            next = level
            while next is not None:
                if next.left is not None:
                    if curr is None:
                        lmost = next.left
                    else:
                        curr.next = next.left
                    curr = next.left
                if next.right is not None:
                    if curr is None:
                        lmost = next.right
                    else:
                        curr.next = next.right
                    curr = next.right
                next = next.next
            level = lmost

def makeTree(vals):
    nodes = [None]*len(vals)
    for i in range(len(vals)):
        nodes[i] = TreeLinkNode(vals[i])
    for i in range(len(vals)):
        if nodes[i] is None:
            continue
        l = 2 * i + 1
        r = 2 * (i + 1)
        if l < len(vals):
            nodes[i].left = nodes[l]
        if r < len(vals):
            nodes[i].right =nodes[r]
    return nodes[0]

class TestSolution(unittest.TestCase):
    def test1(self):
        t = makeTree([1, 2, 3, 0, 4, 5, 0, 0, 0, 3, 0, 0, 7])
        s = Solution()
        s.connect(t)
        while t is not None:
            next = t
            level = []
            while next is not None:
                level.append(next.val)
                next = next.next
            print level
            if t.left is not None:
                t = t.left
            elif t.right is not None:
                t = t.right
            else:
                t = None

    def test_2(self):
        t = makeTree([8,5,-8,9,8,-1,9,5,-4,0,6,9,1,-9,0,5,8,
        -7,-4,-8,8,-1,9,-8,-7,-5,5,-6,-7,9,7,4,-7,-4,6,6,-2,
        -3,-6,-6,-1,0,-7,-9,-6,-3,1,5,4,8,4,4,-6,-4,8,7,-2,9,
        -6,1,9,2,-4,-4,3,-7,-4,4,8,-2,4,-2,3,5,-6,3,6,0,-2,4,
        -9,-3,-2,-7,-2,-4,-9,2,2,-7,7,-3,-5,-6,-6,3,9,-8,-1,7,
        -1,-3,-5,7,-8,-7,-5,1,-4,4,-1,-8,3,-6,7,-4,-5,5,2,9,-2,
        -1,5,-3,-2,-2,-2,8,-3,3,-1,-5,5,-3,-7,-4,4,9,-5,6,2,-6,
        7,8,-1,-1,-8,8,1,5,6,-8,-6,4,-6,2,7,-2,-1,5,-4,-1,-8,-5,
        8,9,-3,8,0,-6,-9,4,4,-3,9,8,0,5,-9,-7,-3,-6,3,-7,4,3,-3,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8,
        -9,-8,6,4,7,9,8,-5,-6,-1,-1,-3,6,-5,2,6,-2,-1,-5,-9,1,-8])
        s = Solution()
        s.connect(t)
        while t is not None:
            next = t
            level = []
            while next is not None:
                level.append(next.val)
                next = next.next
            print level
            if t.left is not None:
                t = t.left
            elif t.right is not None:
                t = t.right
            else:
                t = None

def main():
    unittest.main()

if __name__ == '__main__':
    main()